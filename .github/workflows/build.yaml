name: Build and Release QZ Tray

on:
  push:
    tags:
      - 'v*'
  pull_request:
    branches:
      - '*'

jobs:
  build-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git ant makeself

      - name: Cache JavaFX SDK
        uses: actions/cache@v4
        with:
          path: out/javafx-linux-${{ matrix.arch }}-21.zip
          key: javafx-linux-${{ matrix.arch }}-21
          restore-keys: javafx-linux-${{ matrix.arch }}-21

      - name: Download JavaFX SDK
        if: matrix.arch == 'arm64'
        run: |
          wget -O out/javafx-linux-${{ matrix.arch }}-21.zip https://download2.gluonhq.com/openjfx/21/openjfx-21_linux-${{ matrix.arch }}_bin-sdk.zip

      - name: Compile and package
        run: |
          ant makeself -Dtarget.arch=${{ matrix.arch }} -Djavafx.version=21 -Djavafx.sdk.path=out/javafx-linux-${{ matrix.arch }}-21.zip

      - name: Rename artifact
        run: |
          VERSION=${{ github.ref_name }}
          mv out/qz-tray-*.run out/qz-tray-${VERSION#v}-linux-${{ matrix.arch }}.run

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qz-tray-linux-${{ matrix.arch }}
          path: out/qz-tray-*.run

  build-macos:
    runs-on: macos-latest
    strategy:
      matrix:
        arch: [x86_64, arm64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Install dependencies
        run: |
          brew install git ant makeself

      - name: Cache JavaFX SDK
        uses: actions/cache@v4
        with:
          path: out/javafx-macos-${{ matrix.arch }}-21.zip
          key: javafx-macos-${{ matrix.arch }}-21
          restore-keys: javafx-macos-${{ matrix.arch }}-21

      - name: Download JavaFX SDK
        if: matrix.arch == 'arm64'
        run: |
          curl -o out/javafx-macos-${{ matrix.arch }}-21.zip https://download2.gluonhq.com/openjfx/21/openjfx-21_osx-${{ matrix.arch }}_bin-sdk.zip

      - name: Compile and package
        run: |
          ant pkgbuild -Dtarget.arch=${{ matrix.arch }} -Djavafx.version=21 -Djavafx.sdk.path=out/javafx-macos-${{ matrix.arch }}-21.zip

      - name: Rename artifact
        run: |
          VERSION=${{ github.ref_name }}
          mv out/qz-tray-*.pkg out/qz-tray-${VERSION#v}-macos-${{ matrix.arch }}.pkg

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qz-tray-macos-${{ matrix.arch }}
          path: out/qz-tray-*.pkg

  build-windows:
    runs-on: windows-latest
    strategy:
      matrix:
        arch: [x86_64]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'adopt'

      - name: Install dependencies
        run: |
          choco install -y git ant nsis

      - name: Compile and package
        run: |
          ant nsis -Dtarget.arch=${{ matrix.arch }}

      - name: Rename artifact
        run: |
          $VERSION = "${{ github.ref_name }}"
          mv out/qz-tray-*.exe out/qz-tray-$($VERSION -replace '^v','')-windows-${{ matrix.arch }}.exe
        shell: powershell

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: qz-tray-windows-${{ matrix.arch }}
          path: out/qz-tray-*.exe

  release:
    runs-on: ubuntu-latest
    needs: [build-ubuntu, build-macos, build-windows]
    if: startsWith(github.ref, 'refs/tags/v')
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate SHA256SUMS.txt
        run: |
          cd artifacts
          find . -type f -name "qz-tray-*" -exec sha256sum {} \; > SHA256SUMS.txt

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/qz-tray-*.run
            artifacts/**/qz-tray-*.pkg
            artifacts/**/qz-tray-*.exe
            artifacts/**/SHA256SUMS.txt
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}